with "src_c/Exo_4/lib_complexe_c.gpr";
with "src_c/Exo_4/lib_matrice_c.gpr";
with "src_c++/Exo_4/lib_complexe_cpp.gpr";
with "src_c++/Exo_4/lib_matrice_cpp.gpr";

project cm is

    type T_Lang is ("c", "c++", "ada");
    type T_Ext is ("c", "cpp", "adb");
    Lang : T_Lang := external ("lang", "c");
    Ext : T_Ext := "c";
    case Lang is
        when "ada" => Ext := "adb";
        when "c++" => Ext := "cpp";
        when others => Ext := "c";
    end case;
    type Mode_Type is ("debug", "release");
    Mode : Mode_Type := external ("mode", "debug");

    for Create_Missing_Dirs use "True";
    for Languages use (external ("lang", "c"));
    for Source_Dirs use ("src_" & Lang & "/**");
    for Excluded_Source_Dirs use ("src_" & Lang & "/Exo_4/src_lib", "src_" & Lang & "/Exo_5/src_lib");
    for Main use (
        -- Exo 1
        "carre." & Ext, "diagonale." & Ext,
        -- Exo 2
        "poly_2." & Ext,
        -- Exo 3
        "fact." & Ext, "fact_r." & Ext );
    for Object_Dir use ".obj/"  & Lang &"/" & Mode;
    for Exec_Dir use "exec/" & Lang &"/" & Mode;

    package Compiler is
        for Driver ("C") use "gcc";
        for Driver ("c++") use "g++";
        case Mode is
            when "debug" =>
            for Switches ("C") use ("-g","-W","-Wall","-Werror","-std=c90","-pedantic");
            for Switches ("C++") use ("-g","-W","-Wall","-Werror","-std=c++2a","-pedantic");
            for Switches ("Ada") use ("-g","-gnatwae","-gnatyguxSI","-gnaty4");
            when "release" =>
            for Switches ("C") use ("-O2","-W","-Wall","-Werror","-std=c90","-pedantic");
            for Switches ("C++") use ("-O2","-W","-Wall","-Werror","-std=c++2a","-pedantic");
            for Switches ("Ada") use ("-O2","-gnatwae","-gnatyguxSI","-gnaty4");
        end case;
    end Compiler;
end cm;